app:
  application-name: user # change
  server-port: 8086 # change
  application-version: v1
  context-path: api/${app.application-name}/${app.application-version}
  inventory-service-context-path: api/inventory/${app.application-version}
  database-hostname: localhost # change
  database-port: 5436 # change
  database-name: ${app.application-name}_service_${app.application-version}
  eureka-hostname: localhost # change
  eureka-port: 8761
  keycloak-host: localhost # change
  keycloak-port: 8090
  gateway-service-hostname: localhost # change
  gateway-service-server-port: 8181
  swagger-gateway-service-hostname: localhost # change
  swagger-info-title: User Service # change
  swagger-info-version: v1.0 # change
  #zipkin
  zipkin-hostname: localhost
  zipkin-server-port: 9411
  zipkin-context-path: api/v2/spans
  zipkin-endpoint: http://${app.zipkin-hostname}:${app.zipkin-server-port}/${app.zipkin-context-path}
  #kafka
  kafka-hostname: localhost
  kafka-port: 9092
  kafka-default-topic: default-topic
  kafka-concurrency: 3
  kafka-group-id: default-group-id

security:
  enabled: true
  skip-urls:
    - /guest/**
    - /actuator/**
    - /swagger-ui/**
    - /v3/api-docs/**
    - /api-docs/**
    - /error/**
    - /auth/**

spring:
  application:
    name: ${app.application-name}-service
  security:
    oauth2:
      resourceserver:
        jwt:
          issuer-uri: http://${app.keycloak-host}:${app.keycloak-port}/realms/spring-boot-microservices-realm
  datasource:
    url: jdbc:postgresql://${app.database-hostname}:${app.database-port}/${app.database-name}
    username: postgres
    password: secret
    driver-class-name: org.postgresql.Driver
  jpa:
    show-sql: true
  flyway:
    baseline-on-migrate: true
    baseline-version: 0.0
    locations: classpath:db/migration/
    validate-on-migrate: true
    enabled: true
    table: schema_history
  kafka:
    enabled: true
    bootstrap-servers: ${app.kafka-hostname}:${app.kafka-port}
    template:
      default-topic: ${app.kafka-default-topic}
    producers:
      test-topic:
        topic-name: test-topic
#      order-pending:
#        topic-name: order-pending

#    consumers:
#      order-item-not-available:
#        topic-name: order-item-not-available
#        group-id: order-item-not-available-${spring.application.name}
#        properties:
#          concurrency: ${app.kafka-concurrency}
#      order-processing:
#        topic-name: order-processing
#        group-id: order-processing-${spring.application.name}
#        properties:
#          concurrency: ${app.kafka-concurrency}
#      order-payment-processing:
#        topic-name: order-payment-processing
#        group-id: order-payment-processing-${spring.application.name}
#        properties:
#          concurrency: ${app.kafka-concurrency}

server:
  port: ${app.server-port}
  servlet:
    context-path: /${app.context-path}

feign:
  client:
    enabled: true
    config:
      inventory-client:
        name: inventory-client
        url: http://${app.gateway-service-hostname}:${app.gateway-service-server-port}/${app.inventory-service-context-path}
#      payment-client:
#        name: payment-client
#        url: http://${app.gateway-service-hostname}:${app.gateway-service-server-port}/${app.payment-service-context-path}

keycloak-admin-client:
  enabled: true
  realm: spring-boot-microservices-realm
  server-url: http://${app.keycloak-host}:${app.keycloak-port}
  client-id: microservices-admin-client
  client-secret: 123456789


eureka:
  client:
    serviceUrl:
      defaultZone: http://${app.eureka-hostname}:${app.eureka-port}/eureka
    registry-fetch-interval-seconds: 5
  instance:
    lease-renewal-interval-in-seconds: 5

logging:
  level:
    root: INFO
  pattern:
    level: "%5p[${spring.application.name:},%X{traceId:-},%X{spanId:-}]"

springdoc:
  swagger-ui:
    path: /swagger-ui.html
  api-docs:
    path: /api-docs

swagger:
  server:
    url: http://${app.swagger-gateway-service-hostname}:${app.gateway-service-server-port}/${app.context-path}
  info:
    title: ${app.swagger-info-title}
    version: ${app.swagger-info-version}
    description: Documentation ${app.swagger-info-title} ${app.swagger-info-version}
#  security-scheme:
#    name: bearerAuth
#    bearer-format: JWT
#    scheme: bearer

#management:
#  tracing:
#    enabled: true
#    propagation:
#      type: b3
#    sampling:
#      probability: 1.0
#  endpoints:
#    web:
#      exposure:
#        include: "*"
#  endpoint:
#    health:
#      show-details: always
#  zipkin:
#    tracing:
#      endpoint: http://${app.zipkin-hostname}:${app.zipkin-server-port}/${app.zipkin-context-path}


management:
  tracing:
    enabled: true
    propagation:
      type: b3
    sampling:
      probability: 1.0
  endpoint:
    health:
      show-details: always
  health:
    circuitbreakers:
      enabled: true
    diskspace:
      enabled: true
    db:
      enabled: true
  endpoints:
    web:
      exposure:
        include: "*"
  zipkin:
    tracing:
      endpoint: ${app.zipkin-endpoint}

resilience4j:
  circuitbreaker:
    instances:
      default:
        registerHealthIndicator: true
        event-consumer-buffer-size: 10
        slidingWindowType: COUNT_BASED
        slidingWindowSize: 5
        failureRateThreshold: 50
        waitDurationInOpenState: 5s
        permittedNumberOfCallsInHalfOpenState: 3
        automaticTransitionFromOpenToHalfOpenEnabled: true
  timelimiter:
    instances:
      default:
        timeout-duration: 3s
  retry:
    instances:
      default:
        max-attempts: 3
        wait-duration: 5s

